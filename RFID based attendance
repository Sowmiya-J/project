#include <SPI.h>
#include <MFRC522.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <SoftwareSerial.h>

// Set the LCD address to 0x27 for a 16 chars and 2 line display
LiquidCrystal_I2C lcd(0x27, 16, 2);
SoftwareSerial sim(6, 8);                   // RX & TX pins of gsm to arduino uno

String number = "+917010025898"; // +91 is the country code

int state1 = 0;
int state2 = 0;

#define LED_G 5 //define green LED pin  
#define LED_R 4 //define red LED pin  
#define BUZZER 2 //buzzer pin  
#define RST_PIN    A0
#define SDA_PIN    10

MFRC522 mfrc522(SDA_PIN, RST_PIN);

void setup() {

  lcd.init();
  // Turn on the blacklight
  lcd.backlight();
  Serial.begin(9600);
  sim.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();

  
  pinMode(LED_G, OUTPUT);  
  pinMode(LED_R, OUTPUT);  
  pinMode(BUZZER, OUTPUT);
 

  lcd.setCursor(0, 0);
  lcd.print("  Welcome to  ");
  lcd.setCursor(0, 1);
  lcd.print(" Dept of ECE ");
  delay(4000);
  lcd.clear();
}

void loop() {
  RTC();
  rfid();
}

void RTC()
{
  lcd.setCursor(0, 0);
  lcd.print("Put Your Card to" );
  lcd.setCursor(0, 1);
  lcd.print("the Reader......");
  delay(3000);
  lcd.clear();
}

void rfid()
{
  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent())
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial())
  {
    return;
  }
  //Show UID on serial monitor
  String content = "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++)
  {
    Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
    Serial.print(mfrc522.uid.uidByte[i], HEX);
    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
    content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }

  content.toUpperCase();


  if (content.substring(1) == "F9 FC 49 A2" && state1 == 0) //change here the UID of the card/cards that you want to give access
  {
    beepON();
    lcd.clear();
    lcd.setCursor(5, 0);
    lcd.print("Student 1  ");
    lcd.setCursor(3, 1);
    lcd.print(" Logged IN! ");
    digitalWrite(LED_G, HIGH);
    delay(3000);
    digitalWrite(LED_G, LOW);
    info();
    SendStudent1();
    state1 = 1;
  }
  else if (content.substring(1) == "F9 FC 49 A2" && state1 == 1) //change here the UID of the card/cards that you want to give access
  {
    beepON();
    lcd.clear();
    lcd.setCursor(5, 0);
    lcd.print(" Student 1 ");
    lcd.setCursor(3, 1);
    lcd.print(" Logged OUT! ");
    digitalWrite(LED_G, HIGH);
    delay(3000);
    digitalWrite(LED_G, LOW);
    info();
    SendStudent1();
    state1 = 0;
  }
  else if (content.substring(1) == "43 0D 68 97" && state2 == 0) //change here the UID of the card/cards that you want to give access
  {
    beepON();
    lcd.clear();
    lcd.setCursor(5, 0);
    lcd.print(" Student 2 ");
    lcd.setCursor(3, 1);
    lcd.print(" Logged IN! ");
    digitalWrite(LED_G, HIGH);
    delay(3000);
    digitalWrite(LED_G, LOW);
    info();
    SendStudent2();
    state2 = 1;
  }
  else if (content.substring(1) == "43 0D 68 97" && state2 == 1) //change here the UID of the card/cards that you want to give access
  {
    beepON();
    lcd.clear();
    lcd.setCursor(5, 0);
    lcd.print(" Student 2 ");
    lcd.setCursor(3, 1);
    lcd.print(" Logged OUT! ");
    digitalWrite(LED_G, HIGH);
    delay(3000);
    digitalWrite(LED_G, LOW);
    info();
    SendStudent2();
    state2 = 0;
  }
  else   {
    digitalWrite(BUZZER, HIGH);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("ID : ");
    lcd.print("Unknown");
    lcd.setCursor(0, 1);
    lcd.print("Access denied");
    Serial.println(" Access denied");
    delay(1500);
    digitalWrite(LED_R, HIGH);
    delay(3000);
    digitalWrite(LED_R, LOW);
    digitalWrite(BUZZER, LOW);
    lcd.clear();
  }
}

void smsSend()
{
  lcd.setCursor(0, 0);
  lcd.print("Sending SMS");
  for (int x = 11; x < 16; x++)
  {
    lcd.setCursor(x, 0);
    lcd.print(".");
    delay(1000);
  }

}
void beepON()
{
  digitalWrite(BUZZER, HIGH);
  delay(200);
  digitalWrite(BUZZER, LOW);
  delay(100);
}
void info()
{
  lcd.setCursor(0, 0);
  lcd.print(" ");
  lcd.setCursor(0, 1);
  lcd.print(" ");
  delay(1500);
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Authorized Access");
  delay(1000);
  lcd.clear();
}

void SendStudent1()
{
  lcd.setCursor(0, 0);
  lcd.print("SMS Sending");
  sim.println("AT+CMGF=1");
  delay(1000);
  sim.println("AT+CMGS=\"" + number + "\"\r");
  delay(1000);
  if (state1 == 0) {
    const char Student1[] = " Student 1 Logged IN  ";
    sim.print(Student1);
  }
  else if (state1 == 1) {
    const char Student1[] = " Student 1 Logged OUT  ";
    sim.print(Student1);
  }
  //sim.println(rtc.getTimeStr());
  //delay(100);
  sim.println((char)26);
  smsSend();
}

void SendStudent2()
{
  lcd.setCursor(0, 0);
  lcd.print("SMS Sending");
  sim.println("AT+CMGF=1");
  delay(1000);
  sim.println("AT+CMGS=\"" + number + "\"\r");
  delay(1000);
  if (state2 == 0) {
    const char Student2[] = " Student 2 Logged IN  ";
    sim.print(Student2);
  }
  else if (state2 == 1) {
    const char Student2[] = " Student 2 Logged OUT  ";
    sim.print(Student2);
  }
  //sim.println(rtc.getTimeStr());
  //delay(100);
  sim.println((char)26);
  smsSend();
}
